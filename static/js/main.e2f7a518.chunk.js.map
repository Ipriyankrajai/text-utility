{"version":3,"sources":["components/Inputbox.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Inputbox","useState","text","setText","className","id","value","rows","onChange","e","target","type","onClick","newText","toUpperCase","toLowerCase","sentences","split","finalop","forEach","s","strLen","length","slice","join","cpyTxt","document","getElementById","select","navigator","clipboard","writeText","Navbar","props","class","mode","href","role","toggleMode","style","for","App","setmode","boxip","body","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e2f7a518.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Inputbox() {\r\n    // const txtbox=document.getElementById(\"myBox\");\r\n    // const convertToUpper=()=>{\r\n    //     // console.log(text.toUpperCase())\r\n    //     txtbox.value=txtbox.value.toUpperCase();\r\n    // }\r\n    const convertToUpper=()=>{\r\n        // console.log(text.toUpperCase())\r\n        var newText=text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const convertToLower=()=>{\r\n        // console.log(text.toUpperCase())\r\n        var newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const editTextbox=(e)=>{\r\n        setText(e.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    const clearData=()=>{\r\n        setText(\"\");\r\n    }\r\n    const capitalfirst=()=>{\r\n        let sentences=text.split(\".\");\r\n        let finalop=\"\";\r\n        // console.log(sentences);\r\n        sentences.forEach((s)=>{\r\n            const strLen=s.length;\r\n\r\n            if(strLen){\r\n                if(s[0]===\" \" && strLen>=2){\r\n                    // s[1]=s[1].toUpperCase();\r\n                    finalop+=s[0]+s[1].toUpperCase()+s.slice(2)+\".\";\r\n                    // console.log(s[0]);\r\n                }else{\r\n                    // s[0]=s[0].toLowerCase();\r\n                    finalop+=s[0].toUpperCase()+s.slice(1)+\".\";\r\n                }\r\n\r\n            // s[0].toUpperCase();\r\n            // finalop+=s;\r\n            }\r\n        })\r\n        // console.log(finalop);\r\n        setText(finalop);\r\n    }\r\n    const copyData=()=>{\r\n        const cpyTxt=document.getElementById(\"myBox\");\r\n        cpyTxt.select();\r\n        navigator.clipboard.writeText(cpyTxt.value);\r\n\r\n    }\r\n    const removeSpace=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"my-3\"  >\r\n                <textarea className=\"form-control\" id=\"myBox\" value={text} rows=\"8\" onChange={editTextbox} ></textarea>\r\n                {/* <textarea className=\"form-control\" id=\"myBox\"  rows=\"3\"  ></textarea> */}\r\n\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={convertToUpper}>ToUppercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={convertToLower}>ToLowercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={capitalfirst}>Capital first letter</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={removeSpace}>Remove Extra Space</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={copyData}>Copy</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={clearData}>Clear</button>\r\n            <h1>Text Summary</h1>\r\n            <p>total number of words {text.length===0?0:text.split(' ').length} and total number of letters are {text.length}</p>\r\n            <p>{text.length===0?0:text.split(' ').length/150} Minutes read</p>\r\n            <h1>Preview</h1>\r\n            <p>{text}</p>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav class={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <a class=\"navbar-brand\" href=\"/\">TextUtility</a>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul class=\"navbar-nav mr-auto\">\r\n                        <li class=\"nav-item active\">\r\n                            <a class=\"nav-link\" href=\"/\">Home <span class=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"/\">About</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"/\">Contact us</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <form class=\"form-inline my-2 my-lg-0\">\r\n                    <div class=\"form-check form-switch\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n                    <label class=\"form-check-label\" style={{'color':props.mode==='light'?'black':'white'}} for=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import About from \"./components/About\";\nimport Inputbox from \"./components/Inputbox\";\nimport Navbar from \"./components/Navbar\";\nimport {useState} from 'react'\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const toggleMode=()=>{\n    const boxip=document.getElementById(\"myBox\")\n    if(mode==='light'){\n      setmode(\"dark\");\n\n      document.body.style.backgroundColor = \"#212529\";\n      document.body.style.color = \"white\";\n      boxip.style.backgroundColor=\"grey\";\n      boxip.style.color=\"white\";\n\n\n\n    }\n    else{\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      boxip.style.backgroundColor=\"white\";\n      boxip.style.color=\"black\";\n\n    }\n  }\n  return (\n    <>\n    <Navbar mode={mode} toggleMode={toggleMode} />\n    <div className=\"container\">\n    <Inputbox />\n    {/* <About/> */}\n\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}