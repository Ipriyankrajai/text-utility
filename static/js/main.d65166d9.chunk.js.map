{"version":3,"sources":["components/About.js","components/Inputbox.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","style","color","mode","backgroundColor","border","borderColor","className","id","type","Inputbox","useState","text","setText","value","rows","onChange","e","target","disabled","length","onClick","newText","toUpperCase","showAlert","toLowerCase","sentences","split","finalop","forEach","s","strLen","slice","join","cpyTxt","document","getElementById","select","navigator","clipboard","writeText","filter","ele","Navbar","to","role","toggleMode","htmlFor","Alert","height","alert","msg","App","setmode","setalert","setTimeout","boxip","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d65166d9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n// import { Accordion} from 'react-bootstrap'\r\n\r\n\r\n\r\nexport default function About(props) {\r\n  let style={\r\n    color:props.mode===\"dark\"?\"white\":\"black\",\r\n    backgroundColor:props.mode===\"dark\"?\"#212529\":\"white\",\r\n    border:\"2px solid\",\r\n    borderColor:props.mode===\"dark\"?\"white\":\"black\"\r\n  }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" >\r\n        <h1 >About Us</h1>\r\n        <h3>Our Story</h3>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique placeat, eaque mollitia aliquam consequuntur aliquid eos odit impedit quibusdam nihil at ut. Molestias nulla id alias, fuga qui, doloribus atque molestiae maxime doloremque iste fugit aliquam totam reiciendis asperiores error in vitae nihil libero dolorem vero. Voluptatibus quibusdam deserunt porro laborum nostrum labore iste repellendus cumque eum. Voluptate optio doloribus deserunt laborum corporis porro debitis expedita accusantium, laudantium ex commodi? Adipisci laborum inventore reprehenderit modi. Facilis, sit deleniti eligendi dignissimos ipsam distinctio tempora, quod quisquam, eius facere laborum quas optio voluptatem commodi nemo laudantium iure cumque fugit iste consectetur quam?</p>\r\n        <h3>FAQs</h3>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={style}>\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={style}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={style}>\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={style}>\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={style}>\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={style}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n      {/* <button type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={toggleColor}>{TxtMode}</button> */}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Inputbox(props) {\r\n    // const txtbox=document.getElementById(\"myBox\");\r\n    // const convertToUpper=()=>{\r\n    //     // console.log(text.toUpperCase())\r\n    //     txtbox.value=txtbox.value.toUpperCase();\r\n    // }\r\n    const convertToUpper=()=>{\r\n        // console.log(text.toUpperCase())\r\n        var newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"success\",\"Yay! converted to upper case\");\r\n    }\r\n    const convertToLower=()=>{\r\n        // console.log(text.toUpperCase())\r\n        var newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"success\",\"Yay! converted to lower case\");\r\n    }\r\n    const editTextbox=(e)=>{\r\n        setText(e.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    const clearData=()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"success\",\"Yay! Cleared text\");\r\n    }\r\n    const capitalfirst=()=>{\r\n        let sentences=text.split(\".\");\r\n        let finalop=\"\";\r\n        // console.log(sentences);\r\n        sentences.forEach((s)=>{\r\n            const strLen=s.length;\r\n\r\n            if(strLen){\r\n                if(s[0]===\" \" && strLen>=2){\r\n                    // s[1]=s[1].toUpperCase();\r\n                    finalop+=s[0]+s[1].toUpperCase()+s.slice(2)+\".\";\r\n                    // console.log(s[0]);\r\n                }else{\r\n                    // s[0]=s[0].toLowerCase();\r\n                    finalop+=s[0].toUpperCase()+s.slice(1)+\".\";\r\n                }\r\n\r\n            // s[0].toUpperCase();\r\n            // finalop+=s;\r\n            }\r\n        })\r\n        // console.log(finalop);\r\n        setText(finalop);\r\n        props.showAlert(\"success\",\"Yay! Set all fist letter capital\");\r\n    }\r\n    const copyData=()=>{\r\n        const cpyTxt=document.getElementById(\"myBox\");\r\n        cpyTxt.select();\r\n        navigator.clipboard.writeText(cpyTxt.value);\r\n        props.showAlert(\"success\",\"Yay! copied to clipboad\");\r\n    }\r\n    const removeSpace=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"success\",\"Yay! removed all extra spaces\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"my-3\"  >\r\n                <textarea className=\"form-control\" id=\"myBox\" value={text} rows=\"8\" onChange={editTextbox} ></textarea>\r\n                {/* <textarea className=\"form-control\" id=\"myBox\"  rows=\"3\"  ></textarea> */}\r\n\r\n            </div>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={convertToUpper}>ToUppercase</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={convertToLower}>ToLowercase</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={capitalfirst}>Capital first letter</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={removeSpace}>Remove Extra Space</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={copyData}>Copy</button>\r\n            <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-1 my-2\" onClick={clearData}>Clear</button>\r\n            <h1>Text Summary</h1>\r\n            <p>total number of words {text.split(' ').filter((ele)=>{return ele.length!==0}).length} and total number of letters are {text.length}</p>\r\n            <p>{text.split(' ').filter((ele)=>{return ele.length!==0}).length/150} Minutes read</p>\r\n            <h1>Preview</h1>\r\n            <p>{text}</p>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <Link className=\"navbar-brand\" to=\"/\">TextUtility</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                    <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n                    <label className=\"form-check-label\" style={{'color':props.mode==='light'?'black':'white'}} htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    // console.log(props.alert.type)\r\n    return (\r\n        <div style={{ height: '60px' }}>\r\n        {props.alert && <div>\r\n             <div className={`alert  alert-${props.alert.type}`} role=\"alert\">\r\n            <strong>{props.alert.msg}</strong>\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import About from \"./components/About\";\nimport Inputbox from \"./components/Inputbox\";\nimport Navbar from \"./components/Navbar\";\nimport { useState } from 'react'\nimport Alert from \"./components/Alert\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const toggleMode = () => {\n    const boxip = document.getElementById(\"myBox\")\n    if (mode === 'light') {\n      setmode(\"dark\");\n      showAlert(\"success\",\"dark mode enable\");\n\n      document.body.style.backgroundColor = \"#212529\";\n      document.body.style.color = \"white\";\n      if(boxip){\n      boxip.style.backgroundColor = \"#0d346c\";\n      boxip.style.color = \"white\";\n    }\n\n\n    }\n    else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      if(boxip){\n      boxip.style.backgroundColor = \"white\";\n      boxip.style.color = \"black\";\n      }\n      showAlert(\"success\",\"light mode enable\");\n\n    }\n  }\n\n  const [alert, setalert] = useState(null);\n\n  const showAlert=(type,msg)=>{\n    setalert({\n      msg:msg,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n\n  }\n  return (\n    <>\n    <Router>\n      <Navbar mode={mode} toggleMode={toggleMode}  showAlert={showAlert}/>\n      <Alert alert={alert} />\n      <div className=\"container\">\n\n        {/* <About/> */}\n        <Switch>\n          <Route path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route path=\"/\">\n          <Inputbox showAlert={showAlert} />\n          </Route>\n        </Switch>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}